@page "/CreateTicket"
@attribute [Authorize]
@using TicketSystem.Data
@using Microsoft.AspNetCore.Http
@using TicketSystem.Utility
@using BlazorInputFile
@using Microsoft.AspNetCore.Hosting;
@inject ITicketService ticketService
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor httpContextAccessor
@inject IImageUploadService imageUploadService
@inject IWebHostEnvironment webHostEnvironment

<h3>Create New Ticket</h3>

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Title">Title</label>
                <input form="Title" class="form-control" @bind="ticket.Title" />
            </div>
            <div class="form-group">
                <label for="Content">Content</label>
                <textarea class="form-control" id="textAreaContent" rows="4" @bind="ticket.Content"></textarea>
            </div>
            <div class="form-group">
                <label for="RefersTo"></label>
                <select @bind="@ticket.RefersTo" class="form-control">
                    <option value="0">-- Refers to --</option>
                    <option value="OfficeSupport">Office Support</option>
                    <option value="TechSupport">TechSupport</option>
                </select>
            </div>
            <div class="form-group">
                <label for="Visible for"></label>
                <select @bind="@ticket.Visibility" class="form-control">
                    <option value="0">-- Visible for --</option>
                    <option value="1">Only me</option>
                    <option value="2">Everyone</option>
                </select>
            </div>
            <div class="form-group">
                <InputFile class="btn btn-outline-primary" OnChange="HandleFileSelected"></InputFile>
            </div>
            <div class="imagePadding">
                @msImage
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-outline-primary" @onclick="@Create" value="Save" />
                <input type="button" class="btn btn-outline-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>
@code {
    Ticket ticket = new();
    IFileListEntry file;
    string randomFileName = string.Empty;
    MarkupString msImage;

    protected async void Create()
    {
        ticket.UserId = httpContextAccessor.HttpContext.User.GetUserId();
        ticket.ImageUrl = randomFileName;
        await ticketService.CreateTicket(ticket);
        NavigationManager.NavigateTo("tickets");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("tickets");
    }
    async Task HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (file != null)
        {
            randomFileName = Utility.RandomGenerator.GenerateRandomFileName(file.Name.Substring(file.Name.LastIndexOf(".")));
            await imageUploadService.UploadAsync(file, randomFileName);
            msImage = (MarkupString)("<img src=" + "/Images/" + randomFileName + " alt=\"Uploaded image\" width=\"300\" />");
        }
    }
}